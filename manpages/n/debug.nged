'\" t
.\"     Title: debug
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2021-09-13
.\"    Manual: BRL-CAD
.\"    Source: BRL-CAD
.\"  Language: English
.\"
.TH "DEBUG" "nged" "2021-09-13" "BRL\-CAD" "BRL\-CAD"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
debug \- Allows the user to set or check the flags used by BRL\-CAD libraries to enable low level debugging outputs.
.SH "SYNOPSIS"
.sp
\fBdebug\fP [\-h] [\-l [\fIlib\fP]] [\-C [\fIlib\fP]] [\-V [\fIval\fP]] [lib [\fIflag\fP]]
.SH "DESCRIPTION"
.sp
Supports listing, setting and checking the debug flags defined by
\fIBRL\-CAD\fP libraries.  The outputs controlled by this command are
extremely low level, most likely cryptic to those not familiar with
the internal of BRL\-CAD\(cqs implementation, and may cause any variety of
odd or unexpected behaviors.  Generally speaking, they are present to
avoid having to recompile the code to obtain more verbose information
printing during a debugging setssion, and are intended only for that
use case.  In short, they are development only, \fInot\fP intended for
general user consumption and should be avoided unless you know
\fIexactly\fP what you are doing.
.sp
The \fB\-h\fP help option will print out a list of libraries supported
by the debug command.
.sp
The \fB\-l\fP option will print out a list of debugging flags
supported by the debug command.  With no argument to \fB\-l\fP all
flags for all libraries are listed \- supplying a library name (per
output from the \fB\-h\fP option) to \fB\-l\fP will list only the
flags specific to that library.
.sp
Note that this list and the flags defined within specific libraries
may change at any time \- debugging flags are not considered public API
and should \fInever\fP be relied upon for any user\-facing functionality.
.SH "FLAG REPORTING AND MANIPULATION"
.sp
With no arguments, the \fBdebug\fP command displays all currently set
debug flags for all libraries.  If no debug flags are set (the
default) the return will be empty.
.sp
If a library name is added as an argument, (for example, "debug bu")
the \fBdebug\fP command displays only the currently set debug flags
for that specific library.  Again if no debug flags are set (the
default) the return will be empty.
.sp
To toggle a particular flag, the user supplies the library name and
the flag to the \fBdebug\fP command \- for example, "debug bu AVS"
will toggle the state of the attribute\-value debugging flag in
libbu. If the flag was previously set this command will unset it, and
if unset will set it.  The previously discussed \fBdebug\fP command
modes allow the user to determine the current state of a flag.
.sp
If a user wishes to simply clear all active flags, they can use the
\fB\-C\fP option to \fBdebug\fP to accomplishe this.  If an optional
library name is supplied only the flags speific to that library will
be cleared \- otherwise, all flags will be cleared globally for all
libraries.
.sp
Although it shouldn\(cqt normally be necessary, the \fB\-V\fP option
provides a way to report and manipulate the low level hexadecimal
numerical values controlling the flag behaviors.  Without additional
arguments, \fB\-V\fP will report the hex values for all libraries.
With a library name supplied, it will report the value for that
library.  If a library name and a string defining a positive
hexidecimal number are supplied, the debugging flag will be directly
assigned that numerical value.
.SH "EXAMPLES"
.sp
.B Example 1. Display help and available libraries
.br
.RS 4
.sp
mged> \f(CRdebug \-h\fP
.sp
.if n .RS 4
.nf
debug [\-h] [\-l [lib]] [\-C [lib]] [\-V [lib] [val]] [lib [flag]]

Available libs:
        BU
        NMG
        OPTICAL
        RT
.fi
.if n .RE
.RE
.sp
.B Example 2. List available flags for \fILIBBU\fP
.br
.RS 4
.sp
mged> \f(CRdebug \-l BU\fP
.sp
.if n .RS 4
.nf
BU flags:
      COREDUMP (0x00000001): bu_bomb() should dump core on exit
      PARALLEL (0x00000010): Parallel debug logging
     BACKTRACE (0x00000040): Log backtrace details during abnormal exit
        ATTACH (0x00000080): Waits for a debugger to attach during a crash
          MATH (0x00000100): Fundamental math routines (plane.c, mat.c)
          PTBL (0x00000200): bu_ptbl_() logging
           AVS (0x00000400): bu_avs_() logging
   MAPPED_FILE (0x00000800): bu_mapped_file logging
         PATHS (0x00001000): File and path debug logging
       TABDATA (0x00010000): LIBBN: tabdata
.fi
.if n .RE
.RE
.sp
.B Example 3. Set \fILIBBU\fP flags for bu_avs and path debugging
.br
.RS 4
.sp
mged> \f(CRdebug BU AVS\fP
.sp
.if n .RS 4
.nf
           AVS (0x00000400): bu_avs_() loggin
.fi
.if n .RE
.sp
mged> \f(CRdebug BU PATHS\fP
.sp
.if n .RS 4
.nf
           AVS (0x00000400): bu_avs_() logging
         PATHS (0x00001000): File and path debug logging
.fi
.if n .RE
.RE
.sp
.B Example 4. Set \fILIBRT\fP flag for rt_shootray processing
.br
.RS 4
.sp
mged>\f(CRdebug RT SHOOT\fP
.sp
.if n .RS 4
.nf
         SHOOT (0x00000004): 3 Info about rt_shootray() processing
.fi
.if n .RE
.RE
.sp
.B Example 5. List LIBBU\(cqs active debugging flags and all active debugging flags
.br
.RS 4
.sp
mged> \f(CRdebug BU\fP
.sp
.if n .RS 4
.nf
           AVS (0x00000400): bu_avs_() logging
         PATHS (0x00001000): File and path debug logging
.fi
.if n .RE
.sp
mged> \f(CRdebug\fP
.sp
.if n .RS 4
.nf
BU flags:
           AVS (0x00000400): bu_avs_() logging
         PATHS (0x00001000): File and path debug logging

RT flags:
         SHOOT (0x00000004): 3 Info about rt_shootray() processing
.fi
.if n .RE
.RE
.sp
.B Example 6. Clear LIBRT debug flags
.br
.RS 4
.sp
mged> \f(CRdebug \-C RT\fP
.sp
mged> \f(CRdebug\fP
.sp
.if n .RS 4
.nf
BU flags:
           AVS (0x00000400): bu_avs_() logging
         PATHS (0x00001000): File and path debug logging
.fi
.if n .RE
.RE
.sp
.B Example 7. Clear all active debug flags for all libraries
.br
.RS 4
.sp
mged> \f(CRdebug \-C\fP
.RE
.SH "AUTHOR"
.sp
BRL\-CAD Team
.SH "COPYRIGHT"
.sp
This software is Copyright (c) 1989\-2021 by the United States
Government as represented by U.S. Army Research Laboratory.
.SH "BUG REPORTS"
.sp
Reports of bugs or problems should be submitted via electronic mail to
.MTO "devs\(atbrlcad.org" "" ""